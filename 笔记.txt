# Day1
C++数据类型：
基本类型：
short int	2bit 短整型
int	4bit 整型
unsigned int 4bit	无符号整型
long int 4bit 长整型
char 1bit 字符型
float 4bit 单精度型
double 8bit 双精度型
long double 8bit 长双精度型
bool 1/8bit 布尔型（因为布尔只有一位二进制数，一个字节由8位二进制数组成，所以我猜是1/8）
void 0bit 空
非基本类型：
enum 枚举
type[ ] 数组
struct 结构体
union 共同体
class  类
type * ？？？
指针类型

#Day2
	/*如果你的数组在运行过程中可以确定，
	比如你输入一个整数来确定数组长度，
	这样的话可以通过动态内存分配实现。*/
  eg：
  int a;
  char string1;
  cin>>a;
  string1=new char[];
  cin string1;
	//cout << &b << endl << b[2] << endl << *b << endl;
	//     输出地址            内容     指针指向的第一个字符
eg：
字符串abcdf
地址 c a
  
  #Day3
  Day3
malloc()全称是memory allocation，中文叫动态内存分配，
用于申请一块连续的指定大小的内存块区域以void*类型返回分
配的内存区域地址，当无法知道内存具体位置的时候，想要绑定
真正的内存空间，就需要用到动态的分配内存。括号里是分配的
动态空间的大小（单位字节？）使用完后应用free()释放内存空
间。(stdlib.h)
char *arraya(char *p)
{
   char *pt;
   if
gets()从标准输入设备读字符串函数，其可以无限读取，不会判
断上限，以回车结束读取，所以程序员应该确保buffer的空间足
够大，以便在执行读操作时不发生溢出。

#Day4
  如果出现问题，一定要检查函数名是否一致，声明，定义，使用三
者必须保持一致。

#Day5
  ofstream: 写操作（输出）的文件类 (由ostream引申而来)
  ifstream: 读操作（输入）的文件类(由istream引申而来)
  fstream: 可同时读写操作的文件类 (由iostream引申而来)

#Day6
iosstream	定义读写控制窗口的类型；
fstream	定义读写已命名文件的类型；
sstream	多定义的类型则用于读写存储在内存中的string对象。

istringstream：由istream派生而来，提供读string的功能
ostringstream：由ostream派生而来，提供写string的功能
stringstream：由iostream派生而来，提供读写string的功能

1.getline();按行读取遇回车'\n'停止
2.istringstream sin(string);遇空格'\t'停止
 sin>>

